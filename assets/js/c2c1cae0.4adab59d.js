"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7127],{4772:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>d,toc:()=>o});var s=n(4848),a=n(8453);const c={},r="Testing Guide",d={id:"tests/readme",title:"Testing Guide",description:"XCMSend comes prepackaged with test that dry run the functionality.",source:"@site/docs/tests/readme.md",sourceDirName:"tests",slug:"/tests/",permalink:"/docusaurus/docs/tests/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tests/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"HydraDx swap",permalink:"/docusaurus/docs/swap/hydradx"},next:{title:"Api tests",permalink:"/docusaurus/docs/tests/api"}},i={},o=[{value:"Run tests:",id:"run-tests",level:2},{value:"The tests will check:",id:"the-tests-will-check",level:5},{value:"Broadcast transactions:",id:"broadcast-transactions",level:3}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",h5:"h5",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"testing-guide",children:"Testing Guide"}),"\n",(0,s.jsx)(t.p,{children:"XCMSend comes prepackaged with test that dry run the functionality."}),"\n",(0,s.jsx)(t.h2,{id:"run-tests",children:"Run tests:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"$ git clone https://github.com/XcmSend/app.git  \n$ cd app/\n$ npm install\n$ npm run test\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"> @bagpipes/xcm-send@0.0.3 test\n> npx tsx src/run_tests.ts\n\nRunning tests\nRunning Balance tests\nTesting assethub balance\nassethub balance ok\nChecking polkadot balance checks\npolkadot native balance check ok\nTesting Hydradx asset balance\nHydradx asset balance ok\nrunning transaction tests\n[test] Polkadot transfers\nPolkadot DOT > assethub OK\nPolkadot DOT > hydradx OK\n[test] AssetHub transfers\nAssethub > hydradx ok\n[test] assethub > polkadot\nAssethub > Polkadot ok\n[test] HydraDx transfers\nHydradx > assethub ok\n[test] Hydradx > polkadot\nHydradx > polkadot ok\ntesting interlay\nassethub > interlay\n[assethub2interlay]:  0xe64afe6914886cdcfea8da5f13e1e21aa11876cfe7fdde9299bbcdbbdc3a8b19\n0x0901041f0803010100c11f0300010100e64afe6914886cdcfea8da5f13e1e21aa11876cfe7fdde9299bbcdbbdc3a8b190304000002043205011f000208af2f0000000000\nassethub > interlay ok\ninterlay > assethub\n0x84045e0001c007000000c2eb0b00000000000000000000000003000200a10f000000\ninterlay > assethub ok\nall transaction tests are constructed ok!\nChecking XCM channels\nChecking open hrmp channels\nassethub has open channels\nchecking hydradx channels\nhydradx has open channels\ntest completed\n"})}),"\n",(0,s.jsx)(t.h5,{id:"the-tests-will-check",children:"The tests will check:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"drafting transactions and checking that they are encoded in the right way"}),"\n",(0,s.jsx)(t.li,{children:"checking if each chain returns correct asset and native balance"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"broadcast-transactions",children:"Broadcast transactions:"}),"\n",(0,s.jsxs)(t.p,{children:["Edit the ",(0,s.jsx)(t.code,{children:"src/tests/run_tests"})," and set your seed in the ",(0,s.jsx)(t.code,{children:"get_test_account"})," function."]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var s=n(6540);const a={},c=s.createContext(a);function r(e){const t=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(c.Provider,{value:t},e.children)}}}]);