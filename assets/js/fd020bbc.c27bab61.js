"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2348],{9536:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=t(4848),l=t(8453);const i={},a="Deploy on Debian linux",o={id:"deployments/debian",title:"Deploy on Debian linux",description:"Requirements:",source:"@site/docs/deployments/debian.md",sourceDirName:"deployments",slug:"/deployments/debian",permalink:"/docs/deployments/debian",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/deployments/debian.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Deployments",permalink:"/docs/deployments/"},next:{title:"Run in docker",permalink:"/docs/deployments/docker"}},r={},d=[{value:"Requirements:",id:"requirements",level:2},{value:"Diskspace needed:",id:"diskspace-needed",level:4},{value:"Install npm on Debian:",id:"install-npm-on-debian",level:4},{value:"Step 1:",id:"step-1",level:3},{value:"Clone repo:",id:"clone-repo",level:4},{value:"Install with npm:",id:"install-with-npm",level:4},{value:"Step 2:",id:"step-2",level:3},{value:"Run the local instance",id:"run-the-local-instance",level:4},{value:"Step 3(optimal):",id:"step-3optimal",level:3},{value:"Run a public instance",id:"run-a-public-instance",level:4},{value:"Install nginx",id:"install-nginx",level:4},{value:"Enable nginx to auto start",id:"enable-nginx-to-auto-start",level:4},{value:"Set configuration file <code>/etc/nginx/sites-available/nginx.conf</code>:",id:"set-configuration-file-etcnginxsites-availablenginxconf",level:4},{value:"Restart nginx:",id:"restart-nginx",level:4}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"deploy-on-debian-linux",children:"Deploy on Debian linux"}),"\n",(0,s.jsx)(n.h2,{id:"requirements",children:"Requirements:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Node.js and npm"}),"\n",(0,s.jsx)(n.li,{children:"git"}),"\n",(0,s.jsx)(n.li,{children:"3 gigabyte or more free (harddrive)disk space"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"diskspace-needed",children:"Diskspace needed:"}),"\n",(0,s.jsx)(n.p,{children:"Amount of disk space consumed after installing:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ user@debian:/tmp$ du -sh app-v0.0.1\n1.5G    app-v0.0.1\n"})}),"\n",(0,s.jsx)(n.h4,{id:"install-npm-on-debian",children:"Install npm on Debian:"}),"\n",(0,s.jsx)(n.p,{children:"We recommend that you use a npm version that is later than 8.5, in order to get a later version on debian, add the nodejs package mirror and upgrade your local nodejs version:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'$ sudo apt-get update\n$ sudo apt-get install -y ca-certificates curl gnupg\n$ sudo mkdir -p /etc/apt/keyrings\n$ curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg\n$ echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list\n$ sudo apt-get update  \n$ sudo apt-get install nodejs -y  \n'})}),"\n",(0,s.jsx)(n.h3,{id:"step-1",children:"Step 1:"}),"\n",(0,s.jsx)(n.h4,{id:"clone-repo",children:"Clone repo:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ git clone https://github.com/XcmSend/app.git\n"})}),"\n",(0,s.jsx)(n.h4,{id:"install-with-npm",children:"Install with npm:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ cd app/ \n$ npm install -f \n$ npm run build \n"})}),"\n",(0,s.jsx)(n.p,{children:"Note: Make sure you run a version of nodejs that is more later than 8,5."}),"\n",(0,s.jsx)(n.h3,{id:"step-2",children:"Step 2:"}),"\n",(0,s.jsx)(n.h4,{id:"run-the-local-instance",children:"Run the local instance"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ npm run dev\n\n> @bagpipes/xcm-send@0.0.3 dev\n> yarn build:tailwind && vite\n\nyarn run v1.22.19\n$ npx tailwindcss -c ./tailwind.config.js -i ./src/index.css -o dist/output.css\n  VITE v4.4.9  ready in 9429 ms\n\n  \u279c  Local:   http://localhost:5173/\n  \u279c  Network: use --host to expose\n  \u279c  press h to show help\n \n"})}),"\n",(0,s.jsxs)(n.p,{children:["Paste '",(0,s.jsx)(n.a,{href:"http://localhost:5173/",children:"http://localhost:5173/"}),"' into your browser and your ready to use bagpipes."]}),"\n",(0,s.jsx)(n.h3,{id:"step-3optimal",children:"Step 3(optimal):"}),"\n",(0,s.jsx)(n.p,{children:"In step 2 you learned how to run a local instance of XCMSend. If you want people to be able to access it publicly we need to forward incoming connections to our XCMSend instance that is located at: 127.0.0.1:5173."}),"\n",(0,s.jsx)(n.h4,{id:"run-a-public-instance",children:"Run a public instance"}),"\n",(0,s.jsx)(n.p,{children:"A popular way to deploy XCMSend would be to let the Nginx webserver reverseproxy the connections to the local instance."}),"\n",(0,s.jsx)(n.h4,{id:"install-nginx",children:"Install nginx"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"apt install nginx\n"})}),"\n",(0,s.jsx)(n.h4,{id:"enable-nginx-to-auto-start",children:"Enable nginx to auto start"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ systemctl enable nginx\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"set-configuration-file-etcnginxsites-availablenginxconf",children:["Set configuration file ",(0,s.jsx)(n.code,{children:"/etc/nginx/sites-available/nginx.conf"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-nginx",children:"server {\n    listen 8080;\n    server_name localhost;\n\n    location / {\n        proxy_pass http://127.0.0.1:5173;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n\n    location /static/ {\n        alias /usr/src/app/app-v0.0.1/static/;\n    }\n\n    location /media/ {\n        alias /usr/src/app/app-v0.0.1/media/;\n    }\n\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"restart-nginx",children:"Restart nginx:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ systemctl restart nginx\n"})})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(6540);const l={},i=s.createContext(l);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);